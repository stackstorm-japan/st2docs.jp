|st2| 概要
==========

はじめに
--------

|st2| は複数のサービスツールを統合自動化するプラットフォームです。既存のインフラ・アプリケーション環境を結びつけることにより、こうした環境の運用を自動化できます。特にシステムから発生するイベントを検知し、それに対するオペレーションの定義と実行に特化しています。

|st2| による運用自動化のユースケースの例を以下に示します。

* **障害対応の自動化** -
  `Nagios` や `Sensu`, `New Relic` などといったモニタリングシステムによる、物理ノード・OpenStack、または Amazon EC2 インスタンスなどのノード、またはアプリケーションプロセスの異常検知を起因として、HipChat や JIRA といったサービスにこうした情報を通知する使い方。
* **自動復旧 (AR: Automated Remediation)** -
  OpenStack のコンピュートノードで異常を検知した場合、適切にインスタンスを別のコンピュートノードに退避させ、予測されるダウンタイムを管理者に通知するという使い方。もし不測の事態が発生した場合は、ワークフローの処理を停止させ、PagerDuty を使って管理者を起こす。
* **継続的デリバリ (CD: Continuous Deployment)** -
  Jenkins によるテストと構築、AWS クラスタのプロビジョニングと LB の設定、NewRelic のパフォーマンスデータの基づいて環境の切り替え、または切り戻しをする使い方。

|st2| はワークフロー（又はアクション）やルールによって、こうしたユースケースやそれ以外の運用を自動化するお手伝いをします。また、こうしたルールやワークフローといった StackStorm のコンテンツはコード化されており、ソフトウェア開発の分野 (とかく `StackStorm コミュニティ <https://www.stackstorm.com/community/>`_ などの OSS コミュニティ) ではお馴染みのコード共有のアプローチを通じて、広くお互いに助け合えることができます。

システムの仕組み
----------------

.. figure:: /_static/images/architecture_diagram.jpg
    :align: center

    |st2| architecture diagram

|st2| は、センサとアクションを含む拡張可能な仕組みを通じて、様々な環境と連携します。

* **センサ (Sensors)** は外部システムからの個々のイベントを取得、または監視しする Python プラグインです。センサがイベントを検知した場合 |st2| はトリガを起動させます。

* **トリガ (Triggers)** は |st2| が外部システムのイベントを扱うための仕組みです。トリガにはタイマや webhook によって起動される一般トリガ (generic triggers) と、個別のサービスのイベント (Sensu のアラート発報や、JIRA の Issue の更新など) によって起動されるインテグレーショントリガ (integration triggers) が存在します。センサプラグインの記述によって、ユーザは新たなトリガを定義することができます。

* **アクション (Actions)** は |st2| の外のシステムに対して処理を行う仕組みです。これも ssh ログインや REST API の呼び出しなどといった一般アクション (generic actions) と、特定の pack (OpenStack, Docker, Pappet など) 用のアクションがあります。アクションは Python で記述されたプラグインだけでなく、任意のスクリプトを |st2| から起動させることができます。またアクションは CLI や API からの呼び出しによって直接実行することはもちろん、後述するルール (Rules) やワークフロー (Workflows) から呼び出すこともできます。

* **ルール (Rules)** は、トリガとアクション (又はワークフロー) のマッピングを行う仕組みです。条件 (criteria) を指定してやることで、トリガに特定の値が入力された場合にのみアクションを実行するといったことが出来ます。

* **ワークフロー (Workflows)** は、複数のアクションを組み合わせた別のアクションを作る仕組みです。ワークフローでは、実行するアクションの順番、条件分岐、前後のアクションでの値の受け渡しといった処理が行えます。多くの自動化のケースにおいて、複数のアクションを組み合わせる必要が発生します。|st2| で言うアクションとは、ある一つの目的を達成するために定義された処理のことで、ワークフローはこうしたアクションのライブラリとも言えます。そして、ワークフローもアクション同様に手動で実行することも、ルールで定義したトリガーから実行させることもできます。

* **パック (Packs)** は、上述のコンテンツをまとめたパッケージです。|st2| は上述のシステム連携を行う仕組み（トリガとアクション）と、自動化の仕組み（ルールとワークフロー）を一つの単位として管理されており、それらがプラグイン可能になっています。こうした仕組みによって、それぞれのシステム毎のコンテンツの管理・共有がし易くなります。現在、利用可能なパックは `StackStorm Exchange <https://exchange.stackstorm.org>`_ から確認できます。利用者は独自のパックを作成できるとともに、それを GitHub で公開し、更に StackStorm Exchange で共有することもできます。

* **証跡 (Audit trail)** は、全ての手動・自動実行されたアクションの全記録（実行パラメータ、トリガに渡されたデータ、実行結果と出力結果）を保存します。更に、ここで記録したデータは LogStash, Splunk, statsd, syslog などといったログ収集・分析ツールに出力させることもできます。

|st2| のサービスはモジュール化された複数のサービスによって構成されるアーキテクチャをしています。複数のサービスコンポーネントがメッセージバスを介した疎結合な構成にすることで、スケーラブルなサービスを提供できます。また |st2| は Web UI のほか、CLI クライアントや RESTful API を提供しています。更に同包の Python クライアントを通じて開発者の仕事がより楽になると期待しています。

|st2| は活発に開発を行っています。今後の機能改善や方向性の決定に際し、ユーザコニュニティからの要望・フィードバックを受け付けています。またプロジェクトへのコントリビューションはいつでも歓迎しています！

次のステップ
------------

* インストールと実行方法については、:doc:`インストールガイド </install/index>` をご参照ください。
* オールインワン構成で試してみたい場合は、:doc:`クイックスタートガイド</start>` をご参照ください。
* プロジェクトの方向性についてきになる方は :doc:`ロードマップ </roadmap>` をご参照ください。ご意見もお待ちしています。
* もし宜しければ `StackStorm のユーザコミュニティ <https://www.stackstorm.com/community/>`__ にもご参加ください。

.. include:: __engage_community.rst
